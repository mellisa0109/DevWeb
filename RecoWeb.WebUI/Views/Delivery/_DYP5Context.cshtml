@using DevExtreme.AspNet.Mvc;
@model RecoWeb.WebUI.Models.SMW_DYP5ViewModel
@using RecoWeb.Domain.LocalResource

<div class="col-lg-4 col-md-4 h-100">
    <div class="ibox">
        <div class="ibox-title">
            <span style="font-size:1.4rem;"><i class="fa fa-list-alt" aria-hidden="true"></i>&nbsp;집계</span>
        </div>
        <div class="ibox-content">
            @*<table id="DYP5-Grid1" cellpadding="0" cellspacing="0"></table>
            <div id="DYP5-Pager1" style="text-align: center;">
            </div>*@
            <div id="data-grid-demo">
                @(Html.DevExtreme().DataGrid()
                    .ID("gridContainer01")
                    .Paging(paging => paging.PageSize(20))
                    .Pager(pager =>
                    {
                        pager.ShowPageSizeSelector(true);
                        pager.AllowedPageSizes(new List<int> { 20, 50, 100, 200, 300, 500 });
                        pager.ShowInfo(true);
                    })
                    .Export(e => e.Enabled(true).FileName("ExportTest").AllowExportSelectedData(true))
                    .ColumnAutoWidth(true)
                    .ShowColumnLines(true)
                    .ShowRowLines(true)
                    .ShowBorders(true)
                    .HoverStateEnabled(true)
                    .Sorting(e => e.Mode(GridSortingMode.Multiple))
                    .ColumnMinWidth(50)
                    .AllowColumnResizing(true)
                    .Option("columnResizingMode", ColumnResizingMode.Widget)
                    .OnContentReady("onReady") // 레디 이벤트
                    .OnCellPrepared("cellPrepared") //색칠하는 이벤트
                    //칼럼이름의 시작에 !, @, -, _를 붙이면 _로 바뀜
                    .DataSource(ds => ds.Mvc().Controller("Delivery").Key("_keyColumn")
                        .LoadAction("GetDYP5Result")
                        .LoadParams( new { plantId = new JS("getIdValue('plant')")
                                        , startDate = new JS("getIdValue('startDate')")
                                        , endDate = new JS("getIdValue('endDate')")
                                        , carType = new JS("getIdValue('carType')")
                                        , printFlag = new JS("getCheckedRadio('printType')")
                        }
                        )
                    )
                    .Columns(columns =>
                    {
                        columns.Add().DataField("DPDate").Caption("DP일자").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("CarSequence").Caption("차수").Alignment(HorizontalAlignment.Left);
                        columns.Add().DataField("LOTSequence").Caption("LOT순번").Alignment(HorizontalAlignment.Left);
                        columns.Add().DataField("CarType").Caption("차종").Alignment(HorizontalAlignment.Left);
                        columns.Add().DataField("TotalPallet").Caption("총팔레트").Alignment(HorizontalAlignment.Right);
                        columns.Add().DataField("PrintPallet").Caption("발행팔레트").Alignment(HorizontalAlignment.Right);
                        columns.Add().DataField("BoxQty").Caption("수량").Alignment(HorizontalAlignment.Right);
                        columns.Add().DataField("FirstCN").Caption("처음CN").Alignment(HorizontalAlignment.Right);
                        columns.Add().DataField("LastCN").Caption("마지막CN").Alignment(HorizontalAlignment.Right);
                        columns.Add().DataField("_Param").Caption("파라미터").Alignment(HorizontalAlignment.Left).Visible(false);
                        columns.Add().DataField("_keyColumn").Caption("키").Alignment(HorizontalAlignment.Left).Visible(false);
                    })
                    .OnSelectionChanged("grid1Change") //체인지 이벤트를 선언함
                    .Height(new JS("heightCalc('100')"))
                    .Selection(e => e.Mode(SelectionMode.Single))
                )
            </div>

        </div>
    </div>
</div>

<div class="col-lg-8 col-md-8 h-100">
    <div>
        <div class="ibox">
            <div class="ibox-title">
                <span style="font-size:1.4rem;"><i class="fa fa-list-ul" aria-hidden="true"></i>&nbsp;품번별 집계</span>
            </div>
            <div class="ibox-content">
                @*<table id="DYP5-Grid2" cellpadding="0" cellspacing="0"></table>
                    <div id="DYP5-Pager2" style="text-align: center;">
                    </div>*@
                <div id="data-grid-demo">
                    @(Html.DevExtreme().DataGrid()
                    .ID("gridContainer02")
                    .Paging(paging => paging.PageSize(20))
                    .Pager(pager =>
                    {
                        pager.ShowPageSizeSelector(true);
                        pager.AllowedPageSizes(new List<int> { 20, 50, 100, 200, 300, 500 });
                        pager.ShowInfo(true);
                    })
                    .Export(e => e.Enabled(true).FileName("ExportTest").AllowExportSelectedData(true))  //Export
                    .ColumnAutoWidth(true)
                    .ShowColumnLines(true)
                    .ShowRowLines(true)
                    .ShowBorders(true)
                    .HoverStateEnabled(true)
                    .Sorting(e => e.Mode(GridSortingMode.Multiple))
                    .ColumnMinWidth(50)
                    .AllowColumnResizing(true)
                    .Option("columnResizingMode", ColumnResizingMode.Widget)
                    .OnCellPrepared("cellPrepared2")
                    .DataSource(ds => ds.Mvc().Controller("Delivery").Key("_keyColumn")
                        .LoadAction("GetDYP5ResultByPart")
                        .LoadParams(new
                        {
                            plantId = new JS("getIdValue('plant')")
                            ,
                            startDate = new JS("getIdValue('startDate')")
                            ,
                            endDate = new JS("getIdValue('endDate')")
                            ,
                            carType = new JS("getIdValue('carType')")
                            ,
                            printFlag = new JS("getCheckedRadio('printType')")
                            ,
                            parameter = ""//new JS("getParameter('plant;printType;')")
                        }
                        )
                    )
                    .Columns(columns =>
                    {
                        columns.Add().DataField("DPDate").Caption("DP일자").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("CarSequence").Caption("차수").Alignment(HorizontalAlignment.Left);
                        columns.Add().DataField("LOTSequence").Caption("LOT순번").Alignment(HorizontalAlignment.Left);
                        columns.Add().DataField("PartCode").Caption("품번").Alignment(HorizontalAlignment.Left);
                        columns.Add().DataField("Qty").Caption("수량").Alignment(HorizontalAlignment.Right);
                        columns.Add().DataField("DisplayCode").Caption("서열표시코드").Alignment(HorizontalAlignment.Right);
                        columns.Add().DataField("_keyColumn").Caption("키").Alignment(HorizontalAlignment.Left).Visible(false);
                    })
                    .Height(new JS("heightCalc('50')"))
                    .Selection(e => e.Mode(SelectionMode.Single))
                    )
                </div>
            </div>
        </div>

        <div>
            <div class="ibox">
                <div class="ibox-title">
                    <span style="font-size:1.4rem;"><i class="fa fa-th-list" aria-hidden="true"></i>&nbsp;상세</span>
                </div>
                <div class="ibox-content">
                    @*<table id="DYP5-Grid3" cellpadding="0" cellspacing="0"></table>
                        <div id="DYP5-Pager3" style="text-align: center;">
                        </div>*@
                    <div id="data-grid-demo">
                        @(Html.DevExtreme().DataGrid()
                    .ID("gridContainer03")
                    .Paging(paging => paging.PageSize(20))
                    .Pager(pager =>
                    {
                        pager.ShowPageSizeSelector(true);
                        pager.AllowedPageSizes(new List<int> { 20, 50, 100, 200, 300, 500 });
                        pager.ShowInfo(true);
                    })
                    .Export(e => e.Enabled(true).FileName("ExportTest").AllowExportSelectedData(true))  //Export
                    .ColumnAutoWidth(true)
                    .ShowColumnLines(true)
                    .ShowRowLines(true)
                    .ShowBorders(true)
                    .HoverStateEnabled(true)
                    .Sorting(e => e.Mode(GridSortingMode.Multiple))
                    .ColumnMinWidth(50)
                    .AllowColumnResizing(true)
                    .Option("columnResizingMode", ColumnResizingMode.Widget)
                    .OnCellPrepared("cellPrepared3")
                    .DataSource(ds => ds.Mvc().Controller("Delivery").Key("_keyColumn")
                        .LoadAction("GetDYP5Detail")
                        .LoadParams(new
                        {
                            plantId = new JS("getIdValue('plant')")
                            ,
                            startDate = new JS("getIdValue('startDate')")
                            ,
                            endDate = new JS("getIdValue('endDate')")
                            ,
                            carType = new JS("getIdValue('carType')")
                            ,
                            printFlag = new JS("getCheckedRadio('printType')")
                            ,
                            parameter = ""//new JS("getCheckedRadio('printType')") //<-수정필요함
                        }
                        )
                    )
                    .Columns(columns =>
                    {
                        columns.Add().DataField("DPDate").Caption("DP일자").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("CarSequence").Caption("차수").Alignment(HorizontalAlignment.Right);
                        columns.Add().DataField("CommitNo").Caption("COMM").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("BodyNo").Caption("BODY NO").Alignment(HorizontalAlignment.Left);
                        columns.Add().DataField("OrderNo").Caption("W/ORDER").Alignment(HorizontalAlignment.Left);
                        columns.Add().DataField("RankCar").Caption("차종").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("AreaCode").Caption("지역").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("RankBT").Caption("B/T").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("RankDT").Caption("D/T").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("RankEC").Caption("E/C").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("RankET").Caption("E/T").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("RankMT").Caption("M/T").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("RankRoof").Caption("썬루프").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("RankPTG").Caption("RTG").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("RankRrack").Caption("루프랙").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("RankAHS").Caption("AHS").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("RankLEG").Caption("LEG").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("RankPSD").Caption("PSD").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("RankPE").Caption("YP PE").Alignment(HorizontalAlignment.Center);

                        columns.Add().DataField("LOTSequence").Caption("LOT순번").Alignment(HorizontalAlignment.Right);
                        columns.Add().DataField("CarName").Caption("차종명").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("PartCode").Caption("품번").Alignment(HorizontalAlignment.Left);
                        columns.Add().DataField("RankPaletteNo").Caption("팔레트번호").Alignment(HorizontalAlignment.Right);
                        columns.Add().DataField("isPrint").Caption("발행여부").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("RankPaletteNo").Caption("").Alignment(HorizontalAlignment.Right).Visible(false);
                        columns.Add().DataField("_keyColumn").Caption("키").Alignment(HorizontalAlignment.Left).Visible(false);
                    })
                    .Height(new JS("heightCalc('50')"))
                    .Selection(e => e.Mode(SelectionMode.Single))
                        )
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var a;
    $(document).ready(function () {
    });


    //그리드 Load이후 타는 이벤트
    function onReady(a) {
        if ($('#gridContainer01').dxDataGrid("instance").totalCount() > 0) {
            $('#gridContainer01').dxDataGrid("instance").selectRowsByIndexes(0);
            //↑ 동일함. (↓더 많은 테스트는 진행못함) 
            //$('#' + a.element[0].id).dxDataGrid("instance").selectRows(1) 

        }
    }

    var mergelements = {};
    function cellPrepared(e) {
        var fieldData = e.value,
            fieldHtml = e;
        if (fieldHtml.rowType == 'data') {
            //e.cellElement.addClass("mergecells");
            //color cell on selection
            //e.cellElement.click(function () {
            //    $(".mergecellselected").removeClass("mergecellselected")
            //    $(this).addClass("mergecellselected");
            //});
            if (e.rowIndex > 0 && e.column.command != "edit") {
                if (e.column.dataField == "DPDate")
                {
                    if (e.component.cellValue(e.rowIndex - 1, e.column.dataField) == e.value) {
                        if (e.component.cellValue(e.rowIndex - 1, e.column.dataField)) {
                            var prev = mergelements[e.rowIndex - 1][e.column.dataField]
                            if (!mergelements[e.rowIndex]) mergelements[e.rowIndex] = {};
                            mergelements[e.rowIndex][e.column.dataField] = prev;
                            if (prev) {
                                e.cellElement.css("display", "none");
                                var span = prev.attr('rowspan');
                                if (span)
                                    prev.attr('rowspan', Number(span) + 1);
                                else
                                    prev.attr('rowspan', 2);
                            }
                        }
                        else {
                            if (!mergelements[e.rowIndex]) mergelements[e.rowIndex] = {};
                            mergelements[e.rowIndex][e.column.dataField] = e.cellElement;
                        }

                    }
                    else {
                        if (!mergelements[e.rowIndex]) mergelements[e.rowIndex] = {};
                        mergelements[e.rowIndex][e.column.dataField] = e.cellElement;
                    }
                }
            }
            else {
                if (!mergelements[e.rowIndex]) mergelements[e.rowIndex] = {};
                mergelements[e.rowIndex][e.column.dataField] = e.cellElement;
            }
                
        }
        if (fieldData) {
            var tp = $('#gridContainer01').dxDataGrid("instance").cellValue(fieldHtml.row.key - 1, 'TotalPallet'); //총팔레트 0인경우 색칠
            var pp = $('#gridContainer01').dxDataGrid("instance").cellValue(fieldHtml.row.key - 1, 'PrintPallet'); //발행팔레트 0인경우 색칠
            if (fieldHtml.column.dataField == 'DPDate' || fieldHtml.column.dataField == 'CarSequence' || fieldHtml.column.dataField == 'LOTSequence') {
                fieldHtml.cellElement[0].style.backgroundColor = "#DCE6F1";
                fieldHtml.cellElement[0].style.fontWeight = "600";
            }
            if (fieldHtml.column.dataField == 'TotalPallet') {
                if (tp == '0') {
                    fieldHtml.cellElement[0].style.backgroundColor = "#D9D9D9";
                }
            }
            if (fieldHtml.column.dataField == 'PrintPallet') {
                if (pp == '0') {
                    fieldHtml.cellElement[0].style.backgroundColor = "#D9D9D9";
                }
            }
        }
    }

    function cellPrepared2(e) {
        var fieldData = e.value,
            fieldHtml = e;
        if (fieldHtml.rowType == 'data') {
            if (e.rowIndex > 0 && e.column.command != "edit") {
                if (e.column.dataField == "DPDate") {
                    if (e.component.cellValue(e.rowIndex - 1, e.column.dataField) == e.value) {
                        if (e.component.cellValue(e.rowIndex - 1, e.column.dataField)) {
                            var prev = mergelements[e.rowIndex - 1][e.column.dataField]
                            if (!mergelements[e.rowIndex]) mergelements[e.rowIndex] = {};
                            mergelements[e.rowIndex][e.column.dataField] = prev;
                            if (prev) {
                                e.cellElement.css("display", "none");
                                var span = prev.attr('rowspan');
                                if (span)
                                    prev.attr('rowspan', Number(span) + 1);
                                else
                                    prev.attr('rowspan', 2);
                            }
                        }
                        else {
                            if (!mergelements[e.rowIndex]) mergelements[e.rowIndex] = {};
                            mergelements[e.rowIndex][e.column.dataField] = e.cellElement;
                        }

                    }
                    else {
                        if (!mergelements[e.rowIndex]) mergelements[e.rowIndex] = {};
                        mergelements[e.rowIndex][e.column.dataField] = e.cellElement;
                    }
                }
            }
            else {
                if (!mergelements[e.rowIndex]) mergelements[e.rowIndex] = {};
                mergelements[e.rowIndex][e.column.dataField] = e.cellElement;
            }

            if (fieldData) {
                if (fieldHtml.column.dataField == 'DPDate' || fieldHtml.column.dataField == 'CarSequence' || fieldHtml.column.dataField == 'LOTSequence') {
                    fieldHtml.cellElement[0].style.backgroundColor = "#DCE6F1";
                    fieldHtml.cellElement[0].style.fontWeight = "600";
                }
            }
        }
    }
    var aaa;
    function cellPrepared3(e) {
        var fieldData = e.value,
            fieldHtml = e;
        if (fieldHtml.rowType == 'data') {
            if (fieldHtml.column.dataField == 'LOTSequence' || fieldHtml.column.dataField == 'CarName' || fieldHtml.column.dataField == 'PartCode' || fieldHtml.column.dataField == 'RankPaletteNo' || fieldHtml.column.dataField == 'isPrint') {
                fieldHtml.cellElement[0].style.backgroundColor = "#DCE6F1";
                fieldHtml.cellElement[0].style.fontWeight = "600";
            }
        }
    }


    function grid1Change(selectedRow) {
        var orders = new DevExpress.data.CustomStore({
            load: function (loadOptions) {
                var deferred = $.Deferred(),
                    args = {};

                if (loadOptions.sort) {
                    args.orderby = loadOptions.sort[0].selector;
                    if (loadOptions.sort[0].desc)
                        args.orderby += " desc";
                }

                args.skip = loadOptions.skip || 0;
                args.take = loadOptions.take || 12;

                $.ajax({
                    url: "../Delivery/GetDYP5ResultByPart?plantId=" + $("#plant").val() + "&startDate=" + $("#startDate").val() + "&endDate=" + $("#endDate").val() + "&carType=" + $('#carType').val() + "&printFlag=" + $("input[name='printType']:checked").val() + "&parameter=" + $("#plant").val() + ";" + selectedRow.selectedRowsData[0].DPDate + ";" + selectedRow.selectedRowsData[0].CarSequence + ";" + selectedRow.selectedRowsData[0].LOTSequence,
                    dataType: "json",
                    data: args,
                    success: function (result) {
                        deferred.resolve(result.data);
                        a = result;
                    },
                    error: function (e) {
                        console.log("오류발생");
                        console.log(e);
                        deferred.reject("Data Loading Error");
                    },
                    timeout: 10000
                });
                return deferred.promise();
            }
        });
        $("#gridContainer02").dxDataGrid({
            dataSource: {
                store: orders
            }
        }).dxDataGrid("instance").refresh();

        var orders2 = new DevExpress.data.CustomStore({
            load: function (loadOptions) {
                var deferred = $.Deferred(),
                    args = {};

                if (loadOptions.sort) {
                    args.orderby = loadOptions.sort[0].selector;
                    if (loadOptions.sort[0].desc)
                        args.orderby += " desc";
                }

                $.ajax({
                    url: "../Delivery/GetDYP5Detail?plantId=" + $("#plant").val() + "&startDate=" + $("#startDate").val() + "&endDate=" + $("#endDate").val() + "&carType=" + $('#carType').val() + "&printFlag=" + $("input[name='printType']:checked").val() + "&parameter=" + $("#plant").val() + ";" + selectedRow.selectedRowsData[0].DPDate + ";" + selectedRow.selectedRowsData[0].CarSequence + ";" + selectedRow.selectedRowsData[0].LOTSequence,
                    dataType: "json",
                    data: args,
                    success: function (result) {
                        deferred.resolve(result.data);
                    },
                    error: function (e) {
                        console.log(e);
                        deferred.reject("Data Loading Error");
                    },
                    timeout: 10000
                });
                return deferred.promise();
            }
        });
        
        $("#gridContainer03").dxDataGrid({
            dataSource: {
                store: orders2
            }
        }).dxDataGrid("instance").refresh();

    };
</script>