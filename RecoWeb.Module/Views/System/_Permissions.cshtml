@model RecoWeb.Module.Models.PermissionViewModel
@using RecoWeb.Domain.LocalResource

<div class="col-lg-5 col-md-5 h-100">
    <div class="ibox">
        <div class="ibox-title">
            <span style="font-size:1.4rem;"><i class="fa fa-list-alt" aria-hidden="true"></i>&nbsp;메뉴</span>
        </div>
        <div class="ibox-content">
            @(Html.DevExtreme().TreeList()
                    .ID("gridContainer01")
                    .KeyExpr("Id")
                    .ParentIdExpr("ParentId")
                    //.DataSource(new JS("menuList"))
                    .DataSource(ds => ds.Mvc().Controller("System").Key("Id")
                        .LoadAction("GetCOW_PermissionMenuInquiry")
                        .LoadParams(new
                        {
                            userId = ""
                        }
                        )
                    )
                    .Columns(columns =>
                    {
                        columns.Add().DataField("MenuCode").Caption("메뉴").Alignment(HorizontalAlignment.Left);

                        columns.Add().DataField("Description").Caption("설명").Alignment(HorizontalAlignment.Left);

                        columns.Add().DataField("IsUse").Caption("사용여부").Alignment(HorizontalAlignment.Center);

                        columns.Add().DataField("Sequence").Caption("순서").Alignment(HorizontalAlignment.Right);

                        columns.Add().DataField("ParentMenuCode").Caption("A").Alignment(HorizontalAlignment.Center).Visible(false);

                        columns.Add().DataField("TreeLevel").Caption("B").Alignment(HorizontalAlignment.Left).Visible(false);
                        columns.Add().DataField("IsLeaf").Caption("C").Alignment(HorizontalAlignment.Left).Visible(false);
                        columns.Add().DataField("Loaded").Caption("D").Alignment(HorizontalAlignment.Left).Visible(false);
                        columns.Add().DataField("Expanded").Caption("E").Alignment(HorizontalAlignment.Left).Visible(false);
                        columns.Add().DataField("_KeyColumn").Caption("키").Alignment(HorizontalAlignment.Left).Visible(false);
                    })
                    .ShowRowLines(true)
                    .ShowColumnLines(true)
                    .ShowBorders(true)
                    .ColumnAutoWidth(true)
                    .ExpandedRowKeys(new[] { 1 })
                    .HoverStateEnabled(true)
                    .Selection(e => e.Mode(SelectionMode.Single))
                    .OnSelectionChanged("tree1Change") //체인지 이벤트를 선언함
                    .OnContentReady("onReady") // 레디 이벤트
            )
        </div>
    </div>
</div>

<div class="col-lg-7 col-md-7 h-100">
    <div>
        <div class="ibox">
            <div class="ibox-title">
                <span style="font-size:1.4rem;"><i class="fa fa-list-ul" aria-hidden="true"></i>&nbsp;역할권한</span>
                <span class="pull-right">
                    <button type="button" class="btn btn-default ibox-title-btn" id="btnCreateRole">추가</button>
                    <button type="button" class="btn btn-default ibox-title-btn" id="btnReadRole">읽기</button>
                    <button type="button" class="btn btn-default ibox-title-btn" id="btnUpdateRole">수정</button>
                    <button type="button" class="btn btn-default ibox-title-btn" id="btnDeleteRole">삭제</button>
                    <button type="button" class="btn btn-default ibox-title-btn" id="btnNoAuthRole">권한없음</button>
                    <button type="button" class="btn btn-default view-modal ibox-title-btn" id="btnAddRole" data-toggle='modal' data-target='#Modals'>역할추가</button>
                    <button type="button" class="btn btn-default ibox-title-btn" id="btnRemoveRole">역할삭제</button>
                </span>

            </div>
            <div class="ibox-content">
                @(Html.DevExtreme().DataGrid()
                    .ID("gridContainer02")
                    .Paging(paging => paging.PageSize(20))
                    .Pager(pager =>
                    {
                        pager.ShowPageSizeSelector(true);
                        pager.AllowedPageSizes(new List<int> { 20, 50, 100, 200, 300, 500 });
                        pager.ShowInfo(true);
                    })
                    .Export(e => e.Enabled(true).FileName("ExportTest").AllowExportSelectedData(true))  //Export
                    .ColumnAutoWidth(true)
                    .ShowColumnLines(true)
                    .ShowRowLines(true)
                    .ShowBorders(true)
                    .HoverStateEnabled(true)
                    .Sorting(e => e.Mode(GridSortingMode.Multiple))
                    .ColumnMinWidth(50)
                    .AllowColumnResizing(true)
                    .Option("columnResizingMode", ColumnResizingMode.Widget)
                    .Columns(columns =>
                    {
                        columns.Add().DataField("RoleId").Caption("역할코드").Alignment(HorizontalAlignment.Left);
                        columns.Add().DataField("RoleName").Caption("역할이름").Alignment(HorizontalAlignment.Left);
                        columns.Add().DataField("MenuCode").Caption("메뉴코드").Alignment(HorizontalAlignment.Left);
                        columns.Add().DataField("AuthCreate").Caption("추가").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("AuthRead").Caption("읽기").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("AuthUpdate").Caption("수정").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("AuthDelete").Caption("삭제").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("C_KeyColumn").Caption("키").Alignment(HorizontalAlignment.Left).Visible(false);
                    })
                    .Editing(e => e.Mode(GridEditMode.Popup)
                            .AllowAdding(true)
                            .AllowUpdating(true)
                            .AllowDeleting(true)
                            .UseIcons(true)
                            .Popup(p => p
                                    .ShowTitle(true)
                                    .Width(800)
                                    .Height(550)
                                    .Position(pos => pos
                                            .My(HorizontalAlignment.Center, VerticalAlignment.Center)
                                            .At(HorizontalAlignment.Center, VerticalAlignment.Center)
                                            .Of(new JS("window"))
                                            )
                                )
                            )
                    .Height(new JS("heightCalc('50')"))
                    .Selection(e => e.Mode(SelectionMode.Multiple))
                )
            </div>
        </div>
    </div>

    <div>
        <div class="ibox">
            <div class="ibox-title">
                <span style="font-size:1.4rem;"><i class="fa fa-th-list" aria-hidden="true"></i>&nbsp;작업자권한</span>
                <span class="pull-right">
                    <button type="button" class="btn btn-default ibox-title-btn" id="btnCreateEmployee">추가</button>
                    <button type="button" class="btn btn-default ibox-title-btn" id="btnReadEmployee">읽기</button>
                    <button type="button" class="btn btn-default ibox-title-btn" id="btnUpdateEmployee">수정</button>
                    <button type="button" class="btn btn-default ibox-title-btn" id="btnDeleteEmployee">삭제</button>
                    <button type="button" class="btn btn-default ibox-title-btn" id="btnNoAuthEmployee">권한없음</button>
                    <button type="button" class="btn btn-default view-modal ibox-title-btn" id="btnAddEmployee" data-toggle='modal' data-target='#ModalsEmployee'>작업자추가</button>
                    <button type="button" class="btn btn-default ibox-title-btn" id="btnRemoveEmployee">작업자삭제</button>
                </span>
            </div>
            <div class="ibox-content">
                @(Html.DevExtreme().DataGrid()
                    .ID("gridContainer03")
                    .Paging(paging => paging.PageSize(20))
                    .Pager(pager =>
                    {
                        pager.ShowPageSizeSelector(true);
                        pager.AllowedPageSizes(new List<int> { 20, 50, 100, 200, 300, 500 });
                        pager.ShowInfo(true);
                    })
                    .Export(e => e.Enabled(true).FileName("ExportTest").AllowExportSelectedData(true))  //Export
                    .ColumnAutoWidth(true)
                    .ShowColumnLines(true)
                    .ShowRowLines(true)
                    .ShowBorders(true)
                    .HoverStateEnabled(true)
                    .Sorting(e => e.Mode(GridSortingMode.Multiple))
                    .ColumnMinWidth(50)
                    .AllowColumnResizing(true)
                    .Option("columnResizingMode", ColumnResizingMode.Widget)
                    .Columns(columns =>
                    {
                        columns.Add().DataField("EmployeeId").Caption("작업자코드").Alignment(HorizontalAlignment.Left);
                        columns.Add().DataField("EmployeeName").Caption("작업자이름").Alignment(HorizontalAlignment.Left);
                        columns.Add().DataField("MenuCode").Caption("메뉴코드").Alignment(HorizontalAlignment.Left);
                        columns.Add().DataField("AuthCreate").Caption("추가").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("AuthRead").Caption("읽기").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("AuthUpdate").Caption("수정").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("AuthDelete").Caption("삭제").Alignment(HorizontalAlignment.Center);
                        columns.Add().DataField("C_KeyColumn").Caption("키").Alignment(HorizontalAlignment.Left).Visible(false);
                    })
                    .Height(new JS("heightCalc('50')"))
                    .Selection(e => e.Mode(SelectionMode.Multiple))
                )
            </div>
        </div>
    </div>
</div>


@section Styles {
    <link href="@Url.Action("plugins/bootstrap-toggle/bootstrap-toggle.min.css", "Content")" rel="stylesheet" type="text/css" />

    <link href="@Url.Action("plugins/sweetalert/sweetalert.css", "Content")" rel="stylesheet" type="text/css" />

}

<script type="text/javascript">
    var row_grid1;

    //그리드 Load이후 타는 이벤트
    function onReady(a) {
        if ($('#gridContainer01').dxTreeList("instance").totalCount() > 0) {
            $('#gridContainer01').dxTreeList("instance").selectRowsByIndexes(0);
            //↑ 동일함. (↓더 많은 테스트는 진행못함)
            //$('#' + a.element[0].id).dxDataGrid("instance").selectRows(1)
        }
    }

    function getAllSelectOptions() {
        var states = {};
        states = { "Administrator": "관리자", "Developer": "개발자", "Executives": "임원", "Master": "마스터", "Production": "생산", "Qulity": "품질", "Worker": "작업자" };
        $.post('../Common/GetCOW_CodeRolesInquiry', null, function (data) {
            var userDetails = {};
            $.each(data, function () {
                userDetails[this.RoleId] = this.RoleName;
            })
            states = userDetails;
        }).fail(function (jqXHR, textStatus, errorThrown) {
            alert('Error getting products!');
        });
        return states;
    }

</script>