#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using DevExtreme.AspNet.Mvc;
    
    #line 2 "..\..\Views\System\MenuEdit.cshtml"
    using RecoWeb.Domain.LocalResource;
    
    #line default
    #line hidden
    using RecoWeb.Module;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/System/MenuEdit.cshtml")]
    public partial class _Views_System_MenuEdit_cshtml : System.Web.Mvc.WebViewPage<RecoWeb.Module.Models.COW_MenuListInquiryViewModel>
    {
        public _Views_System_MenuEdit_cshtml()
        {
        }
        public override void Execute()
        {
WriteLiteral("\r\n");

            
            #line 4 "..\..\Views\System\MenuEdit.cshtml"
  

    AjaxOptions ajaxInquiry = new AjaxOptions
    {
        HttpMethod = "GET",
        InsertionMode = InsertionMode.Replace,
        OnSuccess = "ContextInquiry",
        UpdateTargetId = "Context"

    };

            
            #line default
            #line hidden
WriteLiteral("\r\n");

            
            #line 15 "..\..\Views\System\MenuEdit.cshtml"
 using (Ajax.BeginForm("AjaxInquiryContextMenu", "System", ajaxInquiry))
{

            
            #line default
            #line hidden
WriteLiteral("    <div");

WriteLiteral(" class=\"row wrapper border-bottom white-bg page-heading\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"col-lg-8 col-md-8 col-xs-12\"");

WriteLiteral(" style=\"display:flex;\"");

WriteLiteral(">\r\n            <span");

WriteLiteral(" style=\"font-size:3rem; float:left; margin-right:0.5rem;\"");

WriteLiteral(">");

            
            #line 19 "..\..\Views\System\MenuEdit.cshtml"
                                                                      Write(Model.resourceManager.String(Model.ActivePage));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n            <div");

WriteLiteral(" style=\"align-self:flex-end; padding:0.5rem\"");

WriteLiteral(">\r\n                <ol");

WriteLiteral(" class=\"breadcrumb\"");

WriteLiteral(">\r\n                    <li>\r\n                        <a");

WriteAttribute("href", Tuple.Create(" href=\"", 827), Tuple.Create("\"", 862)
            
            #line 23 "..\..\Views\System\MenuEdit.cshtml"
, Tuple.Create(Tuple.Create("", 834), Tuple.Create<System.Object, System.Int32>(Url.Action("Index", "Home")
            
            #line default
            #line hidden
, 834), false)
);

WriteLiteral(">");

            
            #line 23 "..\..\Views\System\MenuEdit.cshtml"
                                                          Write(Resource.Menu_Home);

            
            #line default
            #line hidden
WriteLiteral("</a>\r\n                    </li>\r\n\r\n");

            
            #line 26 "..\..\Views\System\MenuEdit.cshtml"
                    
            
            #line default
            #line hidden
            
            #line 26 "..\..\Views\System\MenuEdit.cshtml"
                     foreach (var page in Model.MenuLocation)
                    {
                        if (page == Model.ActivePage)
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <li");

WriteLiteral(" class=\"active\"");

WriteLiteral(">\r\n                                <strong>");

            
            #line 31 "..\..\Views\System\MenuEdit.cshtml"
                                   Write(Model.resourceManager.String(@page));

            
            #line default
            #line hidden
WriteLiteral(" </strong>\r\n                            </li>\r\n");

            
            #line 33 "..\..\Views\System\MenuEdit.cshtml"
                        }
                        else
                        {

            
            #line default
            #line hidden
WriteLiteral("                            <li>\r\n                                <span>");

            
            #line 37 "..\..\Views\System\MenuEdit.cshtml"
                                 Write(Model.resourceManager.String(@page));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n                            </li>\r\n");

            
            #line 39 "..\..\Views\System\MenuEdit.cshtml"
                        }
                    }

            
            #line default
            #line hidden
WriteLiteral("                </ol>\r\n            </div>\r\n        </div>\r\n        <div");

WriteLiteral(" class=\"col-lg-4 col-md-4\"");

WriteLiteral(" style=\"margin-top: 0.5rem;\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"btn-group pull-right \"");

WriteLiteral(">\r\n                <button");

WriteLiteral(" class=\"btn btn-default\"");

WriteLiteral(" type=\"submit\"");

WriteLiteral(" id=\"btn-find\"");

WriteLiteral("><i");

WriteLiteral(" class=\"fa fa-check\"");

WriteLiteral("></i>&nbsp;");

            
            #line 46 "..\..\Views\System\MenuEdit.cshtml"
                                                                                                        Write(Resource.Inquiry);

            
            #line default
            #line hidden
WriteLiteral("</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n");

WriteLiteral("    <div");

WriteLiteral(" class=\"row wrapper border-bottom white-bg check-item\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"btn-group\"");

WriteLiteral(" data-toggle=\"buttons\"");

WriteLiteral(">\r\n");

WriteLiteral("            ");

            
            #line 52 "..\..\Views\System\MenuEdit.cshtml"
       Write(Html.RadioButtonFor(x => x.isUse, Model.isUse == true ? true : false, new { @class = (Model.isUse == true ? "checked=Checked filter-item" : "") }));

            
            #line default
            #line hidden
WriteLiteral(" ");

            
            #line 52 "..\..\Views\System\MenuEdit.cshtml"
                                                                                                                                                           Write(Resource.Use);

            
            #line default
            #line hidden
WriteLiteral("\r\n");

WriteLiteral("            ");

            
            #line 53 "..\..\Views\System\MenuEdit.cshtml"
       Write(Html.RadioButtonFor(x => x.isUse, Model.isUse == false ? true : false, new { @class = (Model.isUse == false ? "checked=Checked filter-item" : "") }));

            
            #line default
            #line hidden
WriteLiteral(" ");

            
            #line 53 "..\..\Views\System\MenuEdit.cshtml"
                                                                                                                                                             Write(Resource.NonUse);

            
            #line default
            #line hidden
WriteLiteral("\r\n        </div>\r\n    </div>\r\n");

            
            #line 56 "..\..\Views\System\MenuEdit.cshtml"

}

            
            #line default
            #line hidden
WriteLiteral("<div");

WriteLiteral(" id=\"Context\"");

WriteLiteral(" class=\"row wrapper wrapper-content animated fadeInRight\"");

WriteLiteral(">\r\n");

WriteLiteral("    ");

            
            #line 59 "..\..\Views\System\MenuEdit.cshtml"
Write(Html.Partial("_MenuEditContext"));

            
            #line default
            #line hidden
WriteLiteral("\r\n</div>\r\n\r\n\r\n\r\n");

DefineSection("Styles", () => {

WriteLiteral("\r\n    <link");

WriteAttribute("href", Tuple.Create(" href=\"", 2572), Tuple.Create("\"", 2633)
            
            #line 65 "..\..\Views\System\MenuEdit.cshtml"
, Tuple.Create(Tuple.Create("", 2579), Tuple.Create<System.Object, System.Int32>(Url.Action("plugins/jqGrid/ui.jqgrid.css", "Content")
            
            #line default
            #line hidden
, 2579), false)
);

WriteLiteral(" rel=\"stylesheet\"");

WriteLiteral(" type=\"text/css\"");

WriteLiteral(" />\r\n");

});

WriteLiteral("\r\n");

DefineSection("Scripts", () => {

WriteLiteral("\r\n\r\n    <script");

WriteLiteral(" src=\"../Scripts/jquery-3.1.1.min.js\"");

WriteLiteral("></script>\r\n    <script");

WriteLiteral(" src=");

WriteLiteral(" \"../Scripts/plugins/jqGrid/i18n/grid.locale-en.js\" type=\"text/javascript\"></scri" +
"pt>\r\n    <script");

WriteLiteral(" src=");

WriteLiteral(" \"../Scripts/plugins/jqGrid/jquery.jqGrid.min.js\" type=\"text/javascript\"></script" +
">\r\n\r\n\r\n\r\n<script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n\r\n        function ContextInquiry() {\r\n            showGrid1();\r\n        }\r\n\r\n" +
"        var selectedIcon;\r\n        var selectedIsUse;\r\n        var selectedCateg" +
"ory;\r\n\r\n        // 아이콘 판넬\r\n        var icons = \'<div>Icon : <label id=\"select-ic" +
"on\" class=\"FormElement\"></label></div><div class=\"btn-group\"><button data-toggle" +
"=\"dropdown\" class=\"btn btn-default dropdown-toggle\" aria-expanded=\"false\">Action" +
" <span class=\"caret\"></span></button>\'\r\n                        + \'<ul class=\"dr" +
"opdown-menu dropdown-alerts animated fadeInRight dropdown-icon-panel\" style=\"pos" +
"ition: fixed;z-index: 999;top: 50%;left: 30%;width: 50%;\" ><li><div class=\"icon-" +
"panel\" style=\"font-size:30px;\">\'\r\n                        + \'<span class=\"fa fa-" +
"thermometer-empty\" aria-hidden=\"true\" style=\"cursor:pointer;\"></span>\'\r\n        " +
"                + \'<span class=\"fa fa-user-circle-o\" aria-hidden=\"true\" style=\"c" +
"ursor:pointer;\"></span>\'\r\n                        + \'<span class=\"fa fa-linode\" " +
"aria-hidden=\"true\" style=\"cursor:pointer;\"></span>\'\r\n                        + \'" +
"<span class=\"fa fa-ravelry\" aria-hidden=\"true\" style=\"cursor:pointer;\"></span>\'\r" +
"\n                        + \'<span class=\"fa fa-address-book\" style=\"cursor:point" +
"er;\"></span>\'\r\n                        + \'<span class=\"fa fa-github\" style=\"curs" +
"or:pointer;\"></span>\'\r\n                        + \'<span class=\"fa fa-github-alt\"" +
" style=\"cursor:pointer;\"></span>\'\r\n                        + \'<span class=\"fa fa" +
"-github-square\" style=\"cursor:pointer;\"></span>\'\r\n                        + \'<sp" +
"an class=\"fa fa-gitlab\" style=\"cursor:pointer;\"></span>\'\r\n                      " +
"  + \'<span class=\"fa fa-gittip\" style=\"cursor:pointer;\"></span>\'\r\n              " +
"          + \'<span class=\"fa fa-vk\" style=\"cursor:pointer;\"></span>\'\r\n          " +
"              + \'<span class=\"fa fa-wechat\" style=\"cursor:pointer;\"></span>\'\r\n  " +
"                      + \'<span class=\"fa fa-weibo\" style=\"cursor:pointer;\"></spa" +
"n>\'\r\n                        + \'<span class=\"fa fa-weixin\" style=\"cursor:pointer" +
";\"></span>\'\r\n                        + \'<span class=\"fa fa-whatsapp\" style=\"curs" +
"or:pointer;\"></span>\'\r\n                        + \'<span class=\"fa fa-wikipedia-w" +
"\" style=\"cursor:pointer;\"></span>\'\r\n                        + \'<span class=\"fa f" +
"a-windows\" style=\"cursor:pointer;\"></span>\'\r\n                        + \'<span cl" +
"ass=\"fa fa-wordpress\" style=\"cursor:pointer;\"></span>\'\r\n                        " +
"+ \'<span class=\"fa fa-wpbeginner\" style=\"cursor:pointer;\"></span>\'\r\n            " +
"            + \'<span class=\"fa fa-wpexplorer\" style=\"cursor:pointer;\"></span>\'\r\n" +
"                        + \'<span class=\"fa fa-glide\" style=\"cursor:pointer;\"></s" +
"pan>\'\r\n                        + \'<span class=\"fa fa-glide-g\" style=\"cursor:poin" +
"ter;\"></span>\'\r\n                        + \'<span class=\"fa fa-google\" style=\"cur" +
"sor:pointer;\"></span>\'\r\n                        + \'<span class=\"fa fa-google-plu" +
"s\" style=\"cursor:pointer;\"></span>\'\r\n                        + \'<span class=\"fa " +
"fa-google-plus-circle\" style=\"cursor:pointer;\"></span>\'\r\n                       " +
" + \'<span class=\"fa fa-google-plus-official\" style=\"cursor:pointer;\"></span>\'\r\n " +
"                       + \'<span class=\"fa fa-google-plus-square\" style=\"cursor:p" +
"ointer;\"></span>\'\r\n                        + \'<span class=\"fa fa-google-wallet\" " +
"style=\"cursor:pointer;\"></span>\'\r\n                        + \'<span class=\"fa fa-" +
"gratipay\" style=\"cursor:pointer;\"></span>\'\r\n                        + \'<span cla" +
"ss=\"fa fa-grav\" style=\"cursor:pointer;\"></span>\'\r\n                        + \'<sp" +
"an class=\"fa fa-twitch\" style=\"cursor:pointer;\"></span>\'\r\n                      " +
"  + \'<span class=\"fa fa-twitter\" style=\"cursor:pointer;\"></span>\'\r\n             " +
"           + \'<span class=\"fa fa-twitter-square\" style=\"cursor:pointer;\"></span>" +
"\'\r\n                        + \'<span class=\"fa fa-usb\" style=\"cursor:pointer;\"></" +
"span>\'\r\n                        + \'<span class=\"fa fa-viacoin\" style=\"cursor:poi" +
"nter;\"></span>\'\r\n                        + \'<span class=\"fa fa-viadeo\" style=\"cu" +
"rsor:pointer;\"></span>\'\r\n                        + \'<span class=\"fa fa-viadeo-sq" +
"uare\" style=\"cursor:pointer;\"></span>\'\r\n                        + \'<span class=\"" +
"fa fa-vimeo\" style=\"cursor:pointer;\"></span>\'\r\n                        + \'<span " +
"class=\"fa fa-vimeo-square\" style=\"cursor:pointer;\"></span>\'\r\n                   " +
"     + \'<span class=\"fa fa-vine\" style=\"cursor:pointer;\"></span>\'\r\n             " +
"           + \'<span class=\"fa fa-hacker-news\" style=\"cursor:pointer;\"></span>\'\r\n" +
"                        + \'<span class=\"fa fa-houzz\" style=\"cursor:pointer;\"></s" +
"pan>\'\r\n                        + \'<span class=\"fa fa-html5\" style=\"cursor:pointe" +
"r;\"></span>\'\r\n                        + \'<span class=\"fa fa-imdb\" style=\"cursor:" +
"pointer;\"></span>\'\r\n                        + \'<span class=\"fa fa-instagram\" sty" +
"le=\"cursor:pointer;\"></span>\'\r\n                        + \'<span class=\"fa fa-int" +
"ernet-explorer\" style=\"cursor:pointer;\"></span>\'\r\n                        + \'<sp" +
"an class=\"fa fa-ioxhost\" style=\"cursor:pointer;\"></span>\'\r\n                     " +
"   + \'<span class=\"fa fa-joomla\" style=\"cursor:pointer;\"></span>\'\r\n             " +
"           + \'<span class=\"fa fa-jsfiddle\" style=\"cursor:pointer;\"></span>\'\r\n   " +
"                     + \'<span class=\"fa fa-lastfm\" style=\"cursor:pointer;\"></spa" +
"n>\'\r\n                        + \'<span class=\"fa fa-stumbleupon\" style=\"cursor:po" +
"inter;\"></span>\'\r\n                        + \'<span class=\"fa fa-stumbleupon-circ" +
"le\" style=\"cursor:pointer;\"></span>\'\r\n                        + \'<span class=\"fa" +
" fa-superpowers\" style=\"cursor:pointer;\"></span>\'\r\n                        + \'<s" +
"pan class=\"fa fa-telegram\" style=\"cursor:pointer;\"></span>\'\r\n                   " +
"     + \'<span class=\"fa fa-tencent-weibo\" style=\"cursor:pointer;\"></span>\'\r\n    " +
"                    + \'<span class=\"fa fa-themeisle\" style=\"cursor:pointer;\"></s" +
"pan>\'\r\n                        + \'<span class=\"fa fa-trello\" style=\"cursor:point" +
"er;\"></span>\'\r\n                        + \'<span class=\"fa fa-tripadvisor\" style=" +
"\"cursor:pointer;\"></span>\'\r\n                        + \'<span class=\"fa fa-tumblr" +
"\" style=\"cursor:pointer;\"></span>\'\r\n                        + \'<span class=\"fa f" +
"a-tumblr-square\" style=\"cursor:pointer;\"></span>\'\r\n                        + \'<s" +
"pan class=\"fa fa-leanpub\" style=\"cursor:pointer;\"></span>\'\r\n                    " +
"    + \'<span class=\"fa fa-snapchat\" style=\"cursor:pointer;\"></span>\'\r\n          " +
"              + \'<span class=\"fa fa-snapchat-ghost\" style=\"cursor:pointer;\"></sp" +
"an>\'\r\n                        + \'<span class=\"fa fa-snapchat-square\" style=\"curs" +
"or:pointer;\"></span>\'\r\n                        + \'<span class=\"fa fa-soundcloud\"" +
" style=\"cursor:pointer;\"></span>\'\r\n                        + \'<span class=\"fa fa" +
"-spotify\" style=\"cursor:pointer;\"></span>\'\r\n                        + \'<span cla" +
"ss=\"fa fa-stack-exchange\" style=\"cursor:pointer;\"></span>\'\r\n                    " +
"    + \'<span class=\"fa fa-stack-overflow\" style=\"cursor:pointer;\"></span>\'\r\n    " +
"                    + \'<span class=\"fa fa-steam\" style=\"cursor:pointer;\"></span>" +
"\'\r\n                        + \'<span class=\"fa fa-steam-square\" style=\"cursor:poi" +
"nter;\"></span>\'\r\n                        + \'<span class=\"fa fa-wpforms\" style=\"c" +
"ursor:pointer;\"></span>\'\r\n                        + \'<span class=\"fa fa-xing\" st" +
"yle=\"cursor:pointer;\"></span>\'\r\n                        + \'<span class=\"fa fa-xi" +
"ng-square\" style=\"cursor:pointer;\"></span>\'\r\n                        + \'</div></" +
"li></ul></div>\';\r\n\r\n        //아이콘 버튼 만들기\r\n        function createIcon() {\r\n     " +
"       return icons;\r\n        }\r\n\r\n        //아이콘 값 get, set\r\n        //get은 Sumb" +
"it했을때 사용할 값을 리턴 해주면된다.\r\n        function customValue(elem, operation, value) {\r\n" +
"            if (operation === \'get\') {\r\n                if ($(elem).length > 0) " +
"{\r\n                    return $(elem).find(\'label\').text();\r\n                } e" +
"lse {\r\n                    return $(elem).val();\r\n                }\r\n           " +
" } else if (operation === \'set\') {\r\n                $(elem).val(value);\r\n       " +
"         selectedIcon = value;\r\n            }\r\n        }\r\n\r\n        //라디오 버튼(isU" +
"se) 만들기\r\n        function createRadio(value, options) {\r\n            var use = \'" +
"<span><input type=\"radio\" id=\"radio-use\" name=\"RadioIsUse\" value=\"1\"\'\r\n         " +
"       , endUse = \'/><label for=\"radio-use\" style=\"margin-bottom:0px;\">사용</label" +
">\'\r\n                , unUse = \'&nbsp;<input type=\"radio\" id=\"radio-unUse\" name=\"" +
"RadioIsUse\" value=\"0\"\'\r\n                , endUnUse = \'/><label for=\"radio-unUse\"" +
" style=\"margin-bottom:0px;\">중지</label></span>\'\r\n                , radios = \'\';\r\n" +
"\r\n            // 기본 구성은 use + (체크?) + endUse + unUse + (체크?) + endUnUse 로 구성됨.\r\n" +
"            // *여기서 (체크?)는 value에 따라 체크해주는 코드.\r\n\r\n            // O or \"\" 인 경우 사용" +
"으로 간주하고, use 다음에 checked를 넣어줌.\r\n            // X 인 경우 사용으로 간주하고, unUse 다음에 check" +
"ed를 넣어줌.\r\n            // 둘 다 아닌경우는 사용을 기본 선택으로 함.\r\n            if (value == \"O\" " +
"|| value == \"\") {\r\n                radios = use + \' checked=\"checked\"\' + endUse " +
"+ unUse + endUnUse;\r\n            } else if(value == \"X\") {\r\n                radi" +
"os = use + endUse + unUse + \' checked=\"checked\"\' + endUnUse;\r\n            } else" +
" {\r\n                radios = use + \' checked=\"checked\"\' + endUse + unUse + endUn" +
"Use;\r\n            }\r\n            return radios;\r\n        }\r\n\r\n        //라디오 버튼 값" +
" 가져오기.\r\n        //get은 Sumbit했을때 사용할 값을 리턴 해주면된다.\r\n        function RadioValue(e" +
"lem, operation, value) {\r\n            var $elems = $(elem).find(\"input[name=Radi" +
"oIsUse]\");\r\n            if ($elems.length > 0) {\r\n                if (operation " +
"=== \"get\") {\r\n                    if (selectedIsUse) {\r\n                        " +
"return $elems.siblings(\'#\' + selectedIsUse).val();\r\n                        //re" +
"turn $elems.find(\'#\'+selectedIsUse).val();\r\n                    } else {\r\n      " +
"                  return $elems.val();\r\n                    }\r\n                }" +
" else if (operation === \"set\") {\r\n                    $elems.val(value);\r\n      " +
"          }\r\n            }\r\n        }\r\n\r\n        //라디오 버튼(isUse) 만들기\r\n        fu" +
"nction createCategoryRadio(value, options) {\r\n            var use = \'<span><inpu" +
"t type=\"radio\" id=\"radio-menu\" name=\"RadioCategory\" value=\"Menu\"\'\r\n             " +
"   , endUse = \'/><label for=\"radio-menu\" style=\"margin-bottom:0px;\">메뉴</label>\'\r" +
"\n                , unUse = \'&nbsp;<input type=\"radio\" id=\"radio-item\" name=\"Radi" +
"oCategory\" value=\"Item\"\'\r\n                , endUnUse = \'/><label for=\"radio-item" +
"\" style=\"margin-bottom:0px;\">페이지</label></span>\'\r\n                , radios = \'\';" +
"\r\n\r\n            // 기본 구성은 use + (체크?) + endUse + unUse + (체크?) + endUnUse 로 구성됨." +
"\r\n            // *여기서 (체크?)는 value에 따라 체크해주는 코드.\r\n\r\n            // 메뉴(Menu) or \"" +
"\" 인 경우 사용으로 간주하고, use 다음에 checked를 넣어줌.\r\n            // 페이지(Item) 인 경우 사용으로 간주하고" +
", unUse 다음에 checked를 넣어줌.\r\n            // 둘 다 아닌경우는 사용을 기본 선택으로 함.\r\n            " +
"if (value == \"메뉴\" || value == \"\") {\r\n                radios = use + \' checked=\"c" +
"hecked\"\' + endUse + unUse + endUnUse;\r\n            } else if (value == \"페이지\") {\r" +
"\n                radios = use + endUse + unUse + \' checked=\"checked\"\' + endUnUse" +
";\r\n            } else {\r\n                radios = use + \' checked=\"checked\"\' + e" +
"ndUse + unUse + endUnUse;\r\n            }\r\n            return radios;\r\n        }\r" +
"\n        //라디오 카테고리 버튼 값 가져오기.\r\n        function RadioCategoryValue(elem, operat" +
"ion, value) {\r\n            var $elems = $(elem).find(\"input[name=RadioCategory]\"" +
");\r\n            if ($elems.length > 0) {\r\n                if (operation === \"get" +
"\") {\r\n                    if (selectedCategory) {\r\n                        retur" +
"n $elems.siblings(\'#\' + selectedCategory).val();\r\n                        //retu" +
"rn $elems.find(\'#\'+selectedCategory).val();\r\n                    } else {\r\n     " +
"                   return $elems.val();\r\n                    }\r\n                " +
"} else if (operation === \"set\") {\r\n                    $elems.val(value);\r\n     " +
"           }\r\n            }\r\n        }\r\n\r\n        //그리드 추가버튼 아이콘\r\n        functi" +
"on formatIcon(cellValue, options, rowObject) {\r\n            var iconHtml\r\n      " +
"      if (cellValue == \"\") {\r\n                iconHtml = cellValue;\r\n           " +
" } else {\r\n                iconHtml = \"<i class=\'\" + cellValue + \"\' aria-hidden=" +
"\'true\' style=\'font-size:1.3rem;\'></i>\" + \"<span> (\" + cellValue + \")</span>\";\r\n " +
"           }\r\n\r\n            return iconHtml;\r\n        }\r\n\r\n        var paramGrid" +
"1 = {\r\n            Url: \'../System/GetLargeMenu\',\r\n            ColName: [\'\', \'");

            
            #line 280 "..\..\Views\System\MenuEdit.cshtml"
                      Write(Resource.ParentMenuCode);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 280 "..\..\Views\System\MenuEdit.cshtml"
                                                  Write(Resource.MenuCode);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 280 "..\..\Views\System\MenuEdit.cshtml"
                                                                        Write(Resource.MenuName);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 280 "..\..\Views\System\MenuEdit.cshtml"
                                                                                              Write(Resource.Description);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 280 "..\..\Views\System\MenuEdit.cshtml"
                                                                                                                       Write(Resource.Sequence);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 280 "..\..\Views\System\MenuEdit.cshtml"
                                                                                                                                             Write(Resource.Controller);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 280 "..\..\Views\System\MenuEdit.cshtml"
                                                                                                                                                                     Write(Resource.ActionMethod);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 280 "..\..\Views\System\MenuEdit.cshtml"
                                                                                                                                                                                               Write(Resource.Category);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 280 "..\..\Views\System\MenuEdit.cshtml"
                                                                                                                                                                                                                     Write(Resource.IconValue);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 280 "..\..\Views\System\MenuEdit.cshtml"
                                                                                                                                                                                                                                            Write(Resource.Icon);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 280 "..\..\Views\System\MenuEdit.cshtml"
                                                                                                                                                                                                                                                              Write(Resource.IsUse);

            
            #line default
            #line hidden
WriteLiteral("\'],\r\n            ColModel: [{\r\n                name: \'id\', index: \'id\', width: \'8" +
"%\', formatter: \'actions\', editable: false, formatoptions: {\r\n                   " +
" editformbutton: true,\r\n                    editOptions: {\r\n                    " +
"    modal: true,\r\n                        url: \'../System/RootEdit\',\r\n          " +
"              closeOnEscape: true,\r\n                        closeAfterEdit: true" +
",\r\n                        recreateForm: true,\r\n                        beforeIn" +
"itData: function (formid) {\r\n///////////////////////////////     Edit    ///////" +
"///////////////////////////////\r\n                            $(\"#MenuEdit-Grid1\"" +
").jqGrid(\'setColProp\', \'ParentMenuCode\', { editoptions: { defaultValue: \'Root\', " +
"readonly: \'readonly\' } });\r\n                            $(\"#MenuEdit-Grid1\").jqG" +
"rid(\'setColProp\', \'MenuCode\', { editoptions: { readonly: \'readonly\' } });\r\n     " +
"                       $(\"#MenuEdit-Grid1\").jqGrid(\"setColProp\", \"IconValue\", {\r" +
"\n                                edittype: \'custom\',\r\n                          " +
"      editoptions: {\r\n                                    custom_element: create" +
"Icon,\r\n                                    custom_value: customValue,\r\n         " +
"                           dataInit: function (elem) {\r\n\r\n                      " +
"                  $(\"#select-icon\").text(selectedIcon);\r\n                       " +
"             },\r\n                                    dataEvents: [\r\n            " +
"                            {\r\n                                            type:" +
" \'click\',\r\n                                            fn: function (e, s) {\r\n  " +
"                                              var selects = $(e.target).attr(\'cl" +
"ass\');\r\n\r\n                                                if (selects.match(\'fa " +
"\')) {\r\n                                                    $(\"#select-icon\").tex" +
"t(selects);\r\n                                                    var form = $(e." +
"target).closest(\'form.FormGrid\');\r\n                                             " +
"       $(\"div#IconValue.customelement\", form[0]).val(selects);\r\n                " +
"                                } else {\r\n                                      " +
"              console.log(\"중단\");\r\n                                              " +
"      e.preventDefault();\r\n                                                }\r\n\r\n" +
"                                            }\r\n                                 " +
"       }\r\n                                    ]\r\n                               " +
" }\r\n\r\n                            });\r\n\r\n                            //이곳은 Edit버" +
"튼(수정)을 눌렀을때 타는 로직이다.\r\n                            //_MenuEditContext.cshtml에 이와 " +
"유사한 로직이 있는데, 그것은 \'추가\'할 때의 로직이다.\r\n                            //그러므로 둘 다 추가해줘야 한다" +
".\r\n                            $(\"#MenuEdit-Grid1\").jqGrid(\"setColProp\", \"Catego" +
"ry\", {\r\n                                edittype: \'custom\',\r\n                   " +
"             editoptions: {\r\n                                    custom_element:" +
" createCategoryRadio,\r\n                                    custom_value: RadioCa" +
"tegoryValue,\r\n                                    dataInit: function (elem) {\r\n\r" +
"\n                                    },\r\n                                    dat" +
"aEvents: [\r\n                                        {\r\n                         " +
"                   type: \'change\',\r\n                                            " +
"fn: function (e) {\r\n                                                //if ($(e.ta" +
"rget).is(\'input\')) {\r\n                                                selectedCa" +
"tegory = $(e.target).attr(\'id\');\r\n                                              " +
"  var vals = $(e.target).attr(\'value\')\r\n                                        " +
"            , form = $(e.target).closest(\'form.FormGrid\');\r\n\r\n                  " +
"                              $(\"span#Category.customelement\", form[0]).val(vals" +
");\r\n                                                if (vals == \"Menu\") {\r\n     " +
"                                               //초기화\r\n                          " +
"                          //$(\"#Controller\").val(\'\');\r\n                         " +
"                           //$(\"#Controller\").attr(\"readonly\", true);\r\n         " +
"                                           //$(\"#Controller\").css(\'cursor\', \'not" +
"-allowed\');\r\n                                                    $(\"#ActionMetho" +
"d\").val(\'\');\r\n                                                    $(\"#ActionMeth" +
"od\").attr(\"readonly\", true);\r\n                                                  " +
"  $(\"#ActionMethod\").css(\'cursor\', \'not-allowed\');\r\n                            " +
"                    } else if (vals == \"Item\") {\r\n                              " +
"                      //$(\"#Controller\").attr(\"readonly\", false);\r\n             " +
"                                       //$(\"#Controller\").css(\'cursor\', \'auto\');" +
"\r\n                                                    $(\"#ActionMethod\").attr(\"r" +
"eadonly\", false);\r\n                                                    $(\"#Actio" +
"nMethod\").css(\'cursor\', \'auto\');\r\n                                              " +
"  }\r\n                                                //}\r\n                      " +
"                          //} else {\r\n\r\n                                        " +
"        //}\r\n                                            }\r\n                    " +
"                    }\r\n                                    ]\r\n                  " +
"              }\r\n                            });\r\n                            $(" +
"\"#MenuEdit-Grid1\").jqGrid(\"setColProp\", \"IsUse\", {\r\n                            " +
"    edittype: \'custom\',\r\n                                editoptions: {\r\n       " +
"                             custom_element: createRadio,\r\n                     " +
"               custom_value: RadioValue,\r\n                                    da" +
"taInit: function (elem) {\r\n\r\n                                    },\r\n           " +
"                         dataEvents: [\r\n                                        " +
"{\r\n                                            type: \'click\',\r\n                 " +
"                           fn: function (e) {\r\n                                 " +
"               if ($(e.target).is(\'input\')) {\r\n                                 " +
"                   selectedIsUse = $(e.target).attr(\'id\');\r\n                    " +
"                                var vals = $(e.target).attr(\'value\')\r\n          " +
"                                              ,form = $(e.target).closest(\'form." +
"FormGrid\');\r\n                                                    $(\"span#IsUse.c" +
"ustomelement\", form[0]).val(vals);\r\n                                            " +
"    } else {\r\n\r\n                                                }\r\n             " +
"                               }\r\n                                        }\r\n   " +
"                                 ]\r\n                                }\r\n         " +
"                   });\r\n                        },\r\n////////////////////////////" +
"///////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n         " +
"               afterShowForm: function (m) {\r\n                            $(\"#se" +
"lect-icon\").text(selectedIcon);\r\n                            $(\"#MenuEdit-Grid1\"" +
").jqGrid(\"setColProp\", \"IconValue\", { value: selectedIcon });\r\n                 " +
"       },\r\n                        afterComplete: function (response) {\r\n       " +
"                     if (response.responseText) {\r\n                             " +
"   alert(response.responseText);\r\n                                //재조회\r\n       " +
"                         $(\"#MenuEdit-Grid1\").setGridParam({ datatype: \'json\', p" +
"age: 1 }).trigger(\'reloadGrid\');\r\n                            }\r\n               " +
"         }\r\n                    },\r\n\r\n\r\n                    // 컨트롤러의 삭제 함수로 보내는 " +
"파라미터 수정?생성\r\n                    // id, oper은 필수로 함께 보내야한다. 안그러면 추가한 다른 파라미터를 못받아" +
"옴.\r\n                    //\r\n                    // ex) return { id : das.id, ope" +
"r : das.oper, menuCode: $(this).jqGrid(\"getRowData\", das.id).MenuCode, parentMen" +
"uCode: $(this).jqGrid(\"getRowData\", das.id).ParentMenuCode };\r\n                 " +
"   // 여기서 das.id = 현재 그리드의 key값. 이 key값으로 현재 선택한 row의 column을 받아올 수 있당.\r\n       " +
"             // $(this).jqGrid(\"getRowData\", das.id).칼럼이름   을 사용하면 값을 받아올 수 있당.\r" +
"\n                    delOptions: {\r\n                        zIndex: 100,\r\n      " +
"                  url: \"../System/Delete\",\r\n                        closeOnEscap" +
"e: true,\r\n                        closeAfterDelete: true,\r\n                     " +
"   recreateForm: true,\r\n                        mtype: \"POST\",\r\n                " +
"        msg: \"선택 항목을 삭제하시겠습니까?\",\r\n\r\n                        serializeDelData: fu" +
"nction (das) {\r\n                            console.log(das);\r\n                 " +
"           return { id: das.id, oper: das.oper, menuCode: $(this).jqGrid(\"getRow" +
"Data\", das.id).MenuCode, parentMenuCode: $(this).jqGrid(\"getRowData\", das.id).Pa" +
"rentMenuCode };\r\n                        },\r\n                        afterComple" +
"te: function (response) {\r\n                            if (response.responseText" +
") {\r\n                                alert(response.responseText);\r\n            " +
"                }\r\n                        }\r\n                    }\r\n           " +
"     }\r\n            }\r\n\r\n                , { key: false, width: \'7%\', hidden: fa" +
"lse, name: \'ParentMenuCode\', index: \'ParentMenuCode\', editable: true }\r\n        " +
"        , { key: true, width: \'9%\', hidden: false, name: \'MenuCode\', index: \'Men" +
"uCode\', editable: true, editrules: { required: true } }\r\n                , { key" +
": false, width: \'15%\', name: \'MenuName\', index: \'MenuName\', editable: true, edit" +
"rules: { required: true } }\r\n                , { key: false, width: \'17%\', name:" +
" \'Description\', index: \'Description\', editable: true }\r\n                , { key:" +
" false, width: \'5%\', name: \'Sequence\', index: \'Sequence\', align: \'right\', editab" +
"le: true, editrules: { required: true } }\r\n                , { key: false, width" +
": \'9%\', name: \'Controller\', index: \'Controller\', editable: true, editrules: { re" +
"quired: true } }\r\n                , { key: false, width: \'9%\', name: \'ActionMeth" +
"od\', index: \'ActionMethod\', editable: true }\r\n                , { key: false, wi" +
"dth: \'5%\', name: \'Category\', index: \'Category\', align: \'center\', editable: true," +
" editrules: { required: true } }\r\n                , { key: false, name: \'IconVal" +
"ue\', index: \'IconValue\', editable: true, hidden: true, editrules: { edithidden: " +
"true } }\r\n                , { key: false, width: \'14%\', name: \'Icon\', index: \'Ic" +
"on\', editable: false, formatter: formatIcon }\r\n                , { key: false, w" +
"idth: \'7%\', name: \'IsUse\', index: \'IsUse\', align: \'center\', editable: true, edit" +
"rules: { required: true } }\r\n\r\n            ],\r\n            RowNum: 100,\r\n       " +
"     RowList: [20, 50, 100, 200, 300, 500]\r\n        }\r\n\r\n        var paramGrid2 " +
"= {\r\n            Url: \'../System/GetMediumMenu\',\r\n            ColName: [\'\', \'");

            
            #line 460 "..\..\Views\System\MenuEdit.cshtml"
                      Write(Resource.ParentMenuCode);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 460 "..\..\Views\System\MenuEdit.cshtml"
                                                  Write(Resource.MenuCode);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 460 "..\..\Views\System\MenuEdit.cshtml"
                                                                        Write(Resource.MenuName);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 460 "..\..\Views\System\MenuEdit.cshtml"
                                                                                              Write(Resource.Description);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 460 "..\..\Views\System\MenuEdit.cshtml"
                                                                                                                       Write(Resource.Sequence);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 460 "..\..\Views\System\MenuEdit.cshtml"
                                                                                                                                             Write(Resource.Controller);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 460 "..\..\Views\System\MenuEdit.cshtml"
                                                                                                                                                                     Write(Resource.ActionMethod);

            
            #line default
            #line hidden
WriteLiteral("\',\'");

            
            #line 460 "..\..\Views\System\MenuEdit.cshtml"
                                                                                                                                                                                              Write(Resource.Category);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 460 "..\..\Views\System\MenuEdit.cshtml"
                                                                                                                                                                                                                    Write(Resource.IconValue);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 460 "..\..\Views\System\MenuEdit.cshtml"
                                                                                                                                                                                                                                           Write(Resource.Icon);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 460 "..\..\Views\System\MenuEdit.cshtml"
                                                                                                                                                                                                                                                             Write(Resource.IsUse);

            
            #line default
            #line hidden
WriteLiteral("\'],\r\n            ColModel: [{\r\n                name: \'id\', index: \'id\', width: \'8" +
"%\', formatter: \'actions\', editable: false, formatoptions: {\r\n                   " +
" editformbutton: true,\r\n                    editOptions: {\r\n                    " +
"    modal: true,\r\n                        url: \'../System/SubEdit\',\r\n           " +
"             closeOnEscape: true,\r\n                        closeAfterEdit: true," +
"\r\n                        recreateForm: true,\r\n                        beforeIni" +
"tData: function (formid) {\r\n                            $(\"#MenuEdit-Grid2\").jqG" +
"rid(\'setColProp\', \'ParentMenuCode\', { editoptions: { defaultValue: \'Root\', reado" +
"nly: \'readonly\' } });\r\n                            $(\"#MenuEdit-Grid2\").jqGrid(\'" +
"setColProp\', \'MenuCode\', { editoptions: { readonly: \'readonly\' } });\r\n          " +
"                  $(\"#MenuEdit-Grid2\").jqGrid(\"setColProp\", \"IconValue\", {\r\n    " +
"                            edittype: \'custom\',\r\n                               " +
" editoptions: {\r\n                                    custom_element: createIcon," +
"\r\n                                    custom_value: customValue,\r\n              " +
"                      dataInit: function (elem) {\r\n\r\n                           " +
"             $(\"#select-icon\").text(selectedIcon);\r\n                            " +
"        },\r\n                                    dataEvents: [\r\n                 " +
"                       {\r\n                                            type: \'cli" +
"ck\',\r\n                                            fn: function (e, s) {\r\n       " +
"                                         var selects = $(e.target).attr(\'class\')" +
";\r\n\r\n                                                if (selects.match(\'fa \')) {" +
"\r\n                                                    $(\"#select-icon\").text(sel" +
"ects);\r\n                                                    var form = $(e.targe" +
"t).closest(\'form.FormGrid\');\r\n                                                  " +
"  $(\"div#IconValue.customelement\", form[0]).val(selects);\r\n                     " +
"                           } else {\r\n                                           " +
"         console.log(\"중단\");\r\n                                                   " +
" e.preventDefault();\r\n                                                }\r\n       " +
"                                     }\r\n                                        " +
"}\r\n                                    ]\r\n                                }\r\n\r\n " +
"                           });\r\n                            $(\"#MenuEdit-Grid2\")" +
".jqGrid(\"setColProp\", \"Category\", {\r\n                                edittype: \'" +
"custom\',\r\n                                editoptions: {\r\n                      " +
"              custom_element: createCategoryRadio,\r\n                            " +
"        custom_value: RadioCategoryValue,\r\n                                    d" +
"ataInit: function (elem) {\r\n\r\n                                    },\r\n          " +
"                          dataEvents: [\r\n                                       " +
" {\r\n                                            type: \'change\',\r\n               " +
"                             fn: function (e) {\r\n                               " +
"                 //if ($(e.target).is(\'input\')) {\r\n                             " +
"                   selectedCategory = $(e.target).attr(\'id\');\r\n                 " +
"                               var vals = $(e.target).attr(\'value\')\r\n           " +
"                                         , form = $(e.target).closest(\'form.Form" +
"Grid\');\r\n\r\n                                                $(\"span#Category.cust" +
"omelement\", form[0]).val(vals);\r\n                                               " +
" if (vals == \"Menu\") {\r\n                                                    //초기" +
"화\r\n                                                    //$(\"#Controller\").val(\'\'" +
");\r\n                                                    //$(\"#Controller\").attr(" +
"\"readonly\", true);\r\n                                                    //$(\"#Co" +
"ntroller\").css(\'cursor\', \'not-allowed\');\r\n                                      " +
"              $(\"#ActionMethod\").val(\'\');\r\n                                     " +
"               $(\"#ActionMethod\").attr(\"readonly\", true);\r\n                     " +
"                               $(\"#ActionMethod\").css(\'cursor\', \'not-allowed\');\r" +
"\n                                                } else if (vals == \"Item\") {\r\n " +
"                                                   //$(\"#Controller\").attr(\"read" +
"only\", false);\r\n                                                    //$(\"#Contro" +
"ller\").css(\'cursor\', \'auto\');\r\n                                                 " +
"   $(\"#ActionMethod\").attr(\"readonly\", false);\r\n                                " +
"                    $(\"#ActionMethod\").css(\'cursor\', \'auto\');\r\n                 " +
"                               }\r\n                                              " +
"  //}\r\n                                                //} else {\r\n\r\n           " +
"                                     //}\r\n                                      " +
"      }\r\n                                        }\r\n                            " +
"        ]\r\n                                }\r\n                            });\r\n " +
"                           $(\"#MenuEdit-Grid2\").jqGrid(\"setColProp\", \"IsUse\", {\r" +
"\n                                edittype: \'custom\',\r\n                          " +
"      editoptions: {\r\n                                    custom_element: create" +
"Radio,\r\n                                    custom_value: RadioValue,\r\n         " +
"                           dataInit: function (elem) {\r\n\r\n                      " +
"              },\r\n                                    dataEvents: [\r\n           " +
"                             {\r\n                                            type" +
": \'click\',\r\n                                            fn: function (e) {\r\n    " +
"                                            if ($(e.target).is(\'input\')) {\r\n    " +
"                                                selectedIsUse = $(e.target).attr" +
"(\'id\');\r\n                                                    var vals = $(e.targ" +
"et).attr(\'value\')\r\n                                                        , for" +
"m = $(e.target).closest(\'form.FormGrid\');\r\n                                     " +
"               $(\"span#IsUse.customelement\", form[0]).val(vals);\r\n              " +
"                                  } else {\r\n\r\n                                  " +
"              }\r\n                                            }\r\n                " +
"                        }\r\n                                    ]\r\n              " +
"                  }\r\n                            });\r\n                        }," +
"\r\n                        afterShowForm: function (m) {\r\n                       " +
"     $(\"#select-icon\").text(selectedIcon);\r\n                            $(\"#Menu" +
"Edit-Grid2\").jqGrid(\"setColProp\", \"IconValue\", { value: selectedIcon });\r\n      " +
"                  },\r\n                        afterComplete: function (response)" +
" {\r\n                            if (response.responseText) {\r\n                  " +
"              alert(response.responseText);\r\n                                //재" +
"조회\r\n                                $(\"#MenuEdit-Grid2\").setGridParam({ datatype" +
": \'json\', page: 1 }).trigger(\'reloadGrid\');\r\n                            }\r\n    " +
"                    }\r\n                    },\r\n                    delOptions: {" +
"\r\n                        zIndex: 100,\r\n                        url: \"../System/" +
"Delete\",\r\n                        closeOnEscape: true,\r\n                        " +
"closeAfterDelete: true,\r\n                        recreateForm: true,\r\n          " +
"              mtype: \"POST\",\r\n                        msg: \"선택 항목을 삭제하시겠습니까?\",\r\n" +
"\r\n                        serializeDelData: function (das) {\r\n                  " +
"          console.log(das);\r\n                            return { id: das.id, op" +
"er: das.oper, menuCode: $(this).jqGrid(\"getRowData\", das.id).MenuCode, parentMen" +
"uCode: $(this).jqGrid(\"getRowData\", das.id).ParentMenuCode };\r\n                 " +
"       },\r\n                        afterComplete: function (response) {\r\n       " +
"                     if (response.responseText) {\r\n                             " +
"   alert(response.responseText);\r\n                            }\r\n               " +
"         }\r\n                    }\r\n                }\r\n            }\r\n\r\n         " +
"       , { key: false, width: \'8%\', hidden: false, name: \'ParentMenuCode\', index" +
": \'ParentMenuCode\', editable: true }\r\n                , { key: true, width: \'11%" +
"\', hidden: false, name: \'MenuCode\', index: \'MenuCode\', editable: true, editrules" +
": { required: true } }\r\n                , { key: false, width: \'15%\', name: \'Men" +
"uName\', index: \'MenuName\', editable: true, editrules: { required: true } }\r\n    " +
"            , { key: false, width: \'15%\', name: \'Description\', index: \'Descripti" +
"on\', editable: true }\r\n                , { key: false, width: \'5%\', name: \'Seque" +
"nce\', index: \'Sequence\', align: \'right\', editable: true, editrules: { required: " +
"true } }\r\n                , { key: false, width: \'8%\', name: \'Controller\', index" +
": \'Controller\', editable: true, editrules: { required: true } }\r\n               " +
" , { key: false, width: \'11%\', name: \'ActionMethod\', index: \'ActionMethod\', edit" +
"able: true }\r\n                , { key: false, width: \'5%\', name: \'Category\', ind" +
"ex: \'Category\', align: \'center\', editable: true, editrules: { required: true } }" +
"\r\n                , { key: false, name: \'IconValue\', index: \'IconValue\', editabl" +
"e: true, hidden: true, editrules: { edithidden: true } }\r\n                , { ke" +
"y: false, width: \'12%\', name: \'Icon\', index: \'Icon\', editable: false, formatter:" +
" formatIcon }\r\n                , { key: false, width: \'7%\', name: \'IsUse\', index" +
": \'IsUse\', align: \'center\', editable: true, editrules: { required: true } }\r\n\r\n " +
"           ],\r\n            RowNum: 100,\r\n            RowList: [20, 50, 100, 200," +
" 300, 500]\r\n        }\r\n\r\n        var paramGrid3 = {\r\n            Url: \'../System" +
"/GetSmallMenu\',\r\n            ColName: [\'\', \'");

            
            #line 622 "..\..\Views\System\MenuEdit.cshtml"
                      Write(Resource.ParentMenuCode);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 622 "..\..\Views\System\MenuEdit.cshtml"
                                                  Write(Resource.MenuCode);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 622 "..\..\Views\System\MenuEdit.cshtml"
                                                                        Write(Resource.MenuName);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 622 "..\..\Views\System\MenuEdit.cshtml"
                                                                                              Write(Resource.Description);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 622 "..\..\Views\System\MenuEdit.cshtml"
                                                                                                                       Write(Resource.Sequence);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 622 "..\..\Views\System\MenuEdit.cshtml"
                                                                                                                                             Write(Resource.Controller);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 622 "..\..\Views\System\MenuEdit.cshtml"
                                                                                                                                                                     Write(Resource.ActionMethod);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 622 "..\..\Views\System\MenuEdit.cshtml"
                                                                                                                                                                                               Write(Resource.Category);

            
            #line default
            #line hidden
WriteLiteral("\', \'");

            
            #line 622 "..\..\Views\System\MenuEdit.cshtml"
                                                                                                                                                                                                                     Write(Resource.IsUse);

            
            #line default
            #line hidden
WriteLiteral("\'],\r\n            ColModel: [{\r\n                name: \'id\', index: \'id\', width: \'8" +
"%\', formatter: \'actions\', editable: false, formatoptions: {\r\n                   " +
" editformbutton: true,\r\n                    editOptions: {\r\n                    " +
"    modal: true,\r\n                        url: \'../System/SubEdit\',\r\n           " +
"             closeOnEscape: true,\r\n                        closeAfterEdit: true," +
"\r\n                        recreateForm: true,\r\n                        beforeIni" +
"tData: function (formid) {\r\n                            $(\"#MenuEdit-Grid3\").jqG" +
"rid(\'setColProp\', \'ParentMenuCode\', { editoptions: { defaultValue: \'Root\', reado" +
"nly: \'readonly\' } });\r\n                            $(\"#MenuEdit-Grid3\").jqGrid(\'" +
"setColProp\', \'MenuCode\', { editoptions: { readonly: \'readonly\' } });\r\n          " +
"                  $(\"#MenuEdit-Grid3\").jqGrid(\"setColProp\", \"Category\", {\r\n     " +
"                           edittype: \'custom\',\r\n                                " +
"editoptions: {\r\n                                    custom_element: createCatego" +
"ryRadio,\r\n                                    custom_value: RadioCategoryValue,\r" +
"\n                                    dataInit: function (elem) {\r\n\r\n            " +
"                        },\r\n                                    dataEvents: [\r\n " +
"                                       {\r\n                                      " +
"      type: \'change\',\r\n                                            fn: function " +
"(e) {\r\n                                                //if ($(e.target).is(\'inp" +
"ut\')) {\r\n                                                selectedCategory = $(e." +
"target).attr(\'id\');\r\n                                                var vals = " +
"$(e.target).attr(\'value\')\r\n                                                    ," +
" form = $(e.target).closest(\'form.FormGrid\');\r\n\r\n                               " +
"                 $(\"span#Category.customelement\", form[0]).val(vals);\r\n         " +
"                                       if (vals == \"Menu\") {\r\n                  " +
"                                  //초기화\r\n                                       " +
"             //$(\"#Controller\").val(\'\');\r\n                                      " +
"              //$(\"#Controller\").attr(\"readonly\", true);\r\n                      " +
"                              //$(\"#Controller\").css(\'cursor\', \'not-allowed\');\r\n" +
"                                                    $(\"#ActionMethod\").val(\'\');\r" +
"\n                                                    $(\"#ActionMethod\").attr(\"re" +
"adonly\", true);\r\n                                                    $(\"#ActionM" +
"ethod\").css(\'cursor\', \'not-allowed\');\r\n                                         " +
"       } else if (vals == \"Item\") {\r\n                                           " +
"         //$(\"#Controller\").attr(\"readonly\", false);\r\n                          " +
"                          //$(\"#Controller\").css(\'cursor\', \'auto\');\r\n           " +
"                                         $(\"#ActionMethod\").attr(\"readonly\", fal" +
"se);\r\n                                                    $(\"#ActionMethod\").css" +
"(\'cursor\', \'auto\');\r\n                                                }\r\n        " +
"                                        //}\r\n                                   " +
"             //} else {\r\n\r\n                                                //}\r\n" +
"                                            }\r\n                                 " +
"       }\r\n                                    ]\r\n                               " +
" }\r\n                            });\r\n                            $(\"#MenuEdit-Gr" +
"id3\").jqGrid(\"setColProp\", \"IsUse\", {\r\n                                edittype:" +
" \'custom\',\r\n                                editoptions: {\r\n                    " +
"                custom_element: createRadio,\r\n                                  " +
"  custom_value: RadioValue,\r\n                                    dataInit: funct" +
"ion (elem) {\r\n\r\n                                    },\r\n                        " +
"            dataEvents: [\r\n                                        {\r\n          " +
"                                  type: \'click\',\r\n                              " +
"              fn: function (e) {\r\n                                              " +
"  if ($(e.target).is(\'input\')) {\r\n                                              " +
"      selectedIsUse = $(e.target).attr(\'id\');\r\n                                 " +
"                   var vals = $(e.target).attr(\'value\')\r\n                       " +
"                                 , form = $(e.target).closest(\'form.FormGrid\');\r" +
"\n                                                    $(\"span#IsUse.customelement" +
"\", form[0]).val(vals);\r\n                                                } else {" +
"\r\n\r\n                                                }\r\n                         " +
"                   }\r\n                                        }\r\n               " +
"                     ]\r\n                                }\r\n                     " +
"       });\r\n                        },\r\n                        afterComplete: f" +
"unction (response) {\r\n                            if (response.responseText) {\r\n" +
"                                alert(response.responseText);\r\n                 " +
"               //재조회\r\n                                $(\"#MenuEdit-Grid3\").setGr" +
"idParam({ datatype: \'json\', page: 1 }).trigger(\'reloadGrid\');\r\n                 " +
"           }\r\n                        }\r\n                    },\r\n               " +
"     delOptions: {\r\n                        zIndex: 100,\r\n                      " +
"  url: \"../System/Delete\",\r\n                        closeOnEscape: true,\r\n      " +
"                  closeAfterDelete: true,\r\n                        recreateForm:" +
" true,\r\n                        mtype: \"POST\",\r\n                        msg: \"선택" +
" 항목을 삭제하시겠습니까?\",\r\n\r\n                        serializeDelData: function (das) {\r\n" +
"                            console.log(das);\r\n                            retur" +
"n { id: das.id, oper: das.oper, menuCode: $(this).jqGrid(\"getRowData\", das.id).M" +
"enuCode, parentMenuCode: $(this).jqGrid(\"getRowData\", das.id).ParentMenuCode };\r" +
"\n                        },\r\n                        afterComplete: function (re" +
"sponse) {\r\n                            if (response.responseText) {\r\n           " +
"                     alert(response.responseText);\r\n                            " +
"}\r\n                        }\r\n                    }\r\n                }\r\n        " +
"    }\r\n\r\n                , { key: false, width: \'10%\', hidden: false, name: \'Par" +
"entMenuCode\', index: \'ParentMenuCode\', editable: true }\r\n                , { key" +
": true, width: \'12%\', hidden: false, name: \'MenuCode\', index: \'MenuCode\', editab" +
"le: true, editrules: { required: true } }\r\n                , { key: false, width" +
": \'15%\', name: \'MenuName\', index: \'MenuName\', editable: true, editrules: { requi" +
"red: true } }\r\n                , { key: false, width: \'18%\', name: \'Description\'" +
", index: \'Description\', editable: true }\r\n                , { key: false, width:" +
" \'5%\', name: \'Sequence\', index: \'Sequence\', align: \'right\', editable: true, edit" +
"rules: { required: true } }\r\n                , { key: false, width: \'13%\', name:" +
" \'Controller\', index: \'Controller\', editable: true, editrules: { required: true " +
"} }\r\n                , { key: false, width: \'12%\', name: \'ActionMethod\', index: " +
"\'ActionMethod\', editable: true }\r\n                , { key: false, width: \'5%\', n" +
"ame: \'Category\', index: \'Category\', align: \'center\', editable: true, editrules: " +
"{ required: true } }\r\n                , { key: false, width: \'7%\', name: \'IsUse\'" +
", index: \'IsUse\', align: \'center\', editable: true, editrules: { required: true }" +
" }\r\n\r\n            ],\r\n            RowNum: 100,\r\n            RowList: [20, 50, 10" +
"0, 200, 300, 500]\r\n        }\r\n\r\n        $(document).ready(function () {\r\n       " +
"     showGrid1();\r\n            $(\':input:checked\').parent(\'.btn\').addClass(\'acti" +
"ve\');\r\n        });\r\n</script>\r\n");

});

        }
    }
}
#pragma warning restore 1591
